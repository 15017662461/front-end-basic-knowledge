HTML的全称叫Hyper Text Markup Language 超文本标记语言

background-color 属性为元素定义了背景颜色       <h2 style="background-color:red">This is a heading</h2>
font-family、color 以及 font-size 属性分别定义元素中文本的字体系列、颜色和字体尺寸    <p style="font-family:arial;color:red;font-size:20px;">A paragraph.</p>
&nbsp；可以用来替代空格，并且可以代替多个空格显示出来
&lt；用来替代<    &gt;用来替代>    
<br>用来换行并可以多个换行    <hr>用来显示水平线
<ol>有序列表  <ol type = "A">用ABCD...来排序，<ol type = "i">用罗马数字排序   <ol reversed="reversed">倒序排序     <ol start="2">从2开始排序，无论哪种排序方法，这里都只用填阿拉伯数字即可
<ul>无序列表  <ul type="disc">前面用黑方点   <ul type="circle">前面用空心圆
相对路径  当处于同一个文件夹下时，是相对关系，src="123.jpg"
绝对路径   如果不处于同一个文件夹下时，是绝对关系，src="E:\w3school\123.jpg"把整个文件地址复制过来
<img src="" alt="这是注释">用来在图片加载不出来的时候显示文字“这是注释”    <img src="" title="这是图片">鼠标移到图片上时显示“这是图片”
<a href="www.baidu.com">百度</a> 显示出来“百度”，点击后跳转“www.baidu.com” 
<a href="" target="_blank">在新窗口下打开       <a>标签下可以包裹任何标签
<a href="#abgfiun"> 点击后可以回到id叫abgfiun标签下
<a href="tel:1991762688">点击后可以拨打电话     <a href="mailto:15017662461@163.com">可以用来发邮件
表单制作登录界面：
<form method="get/post" action="提交数据到的地址">
<p>username:<input type="text" name="username"></p>
<p>password:<input type="password" name="password"></p>
<input type="submit" value="login">    注意要有name以及value才能提交，文本框内的内容就是value

表单制作单选题   以及初始的默认选中：
<form method="get/post" action="提交数据到的地址">
最喜欢的水果：
苹果<input type="radio" name="fruit" value="apple" checked="checked">
梨子<input type="radio" name="fruit" value="pear">
香蕉<input type="radio" name="fruit" value="banana">     用同一个name来确定这是一道单选题

表单制作多选题    以及初始的默认选中：
<form method="get" action="数据提交到的地址">
喜欢的几种水果：
苹果<input type="checkbox" name="fruit" value="apple" checked="checked">
橙子<input type="checkbox" name="fruit" value="orange">
香蕉<input type="checkbox" name="fruit" value="banana">

表单制作下拉菜单：
<form method="get/post" action="提交数据到的地址">
<h1>Province</h1>
<select name="province">注意要提交所以要有name 而这里的value则是option内部的值
<option>beijng</option>
<option>shanghai</option>
<option>guangdong</option>
<option>hunan</option>
</select>
<input type="submit">

表单填写多行文本：
<textarea name='work' cols='50' rows='5'></textarea>
<input type='submit' />

在元素内部加上contenteditable属性能够让用户修改页面上的内容    <p contenteditable = 'true'></p>当它的值为true时，用户可以更改文本内容，为false则不能
在元素内部加上dir可以控制文本的方向   dir = 'ltr'从左到右，dir = 'rtl'从右到左
在元素内部加上tabindex可以控制用户按下tab键时，键盘焦点的转移顺序，会从tabindex等于1一直按顺序转移下去，如果tabindex值为-1，则表示键盘焦点不会转移到它身上

基本的格式标签
<font>不赞成使用，可以用size，color，face等属性定义字体的大小，颜色，字体样式
<b>粗体文字
<i>斜体文本
<pre>定义预格式文本，可以保留空格和空行
<tt>定义打字机文本，呈现类似打字机或者等宽的文本效果
<em>定义语气强烈的强调文本，会带有一点倾斜
<strong>定义语气更为强烈的强调文本，会加粗
<dfn>定义定义项目，斜体文字
<code>定义计算机代码文本 var a = 1
<samp>定义计算机输出文本  ctrl + c
<kbd>定义键盘文本  
<var>定义文本的变量部分
<cite>定义引用，常用于参考文献
<blockquote>定义块引用(引用别人一大段话)
<q>定义行引用，会自动打上双引号
<sup>上角标
<sub>下角标
<abbr>定义缩写，内部title属性可以显示全称，鼠标放上去会显示title的全称
<address>定义文档作者或者拥有者的联系信息
<mark>定义有记号的文本
<meter>定义范围内的度量，详见h5新增标签
<progress>定义任务进度。详见h5
<time>定义日期或者时间，内部有datetime属性，值显示时间
<wbr>规定在文本的何处适合添加换行符

基本列表标签
<ul>定义无序列表，内部属性type='disc'(实心圆)/'square'(方块)/'circle'(圆圈)
<ol>定义有序列表，内部属性type='1/A'...
<li>定义列表的项目  内部也有type根据ul、ol进行更改
<dl>定义定义列表
<dt>定义列表中的项目
<dd>定义列表中项目的描述    <dl><dt>标题</dt><dd>描述</dd></dl>

图像标签
<img>定义图像，必须有src，alt属性，alt属性规定了图像看不见时的替代文本，usemap填写对应的map的#+name，即可将map映射到img上
相对路径开头如果不用返回上一级就不用/，直接images/123.jpg，如果要返回上一级，../images/123.jpg
<map>定义图像映射，有name属性，用于辨别map并填写到img的usemap内，内部包含area，
<area>定义图像地图内部内部的区域，必须有alt替换文本，可选
coords(坐标)，如果是方形则包含左上右下两坐标，圆形包含圆心半径，三角形包含三点
href(url)、nohref(排除区域)、target(在何处打开url)
shape(形状)，包含rect方形，circle圆形，poly三角形
<canvas>定义图形
<figure>定义媒介内容的分组，内部可以包含figcaption，img，video，audio等
<figcaption>定义figure元素的标题

链接标签
<a> href=''表示连接到的url，target=_blank新窗口,_parent父框架,_self自身框架打开,_top突破整个框架,framename框架
url可以链接到真实url，本地文件，mailto+地址可以发邮件，不知道文件类型则下载：house.rar
<link> rel='stylesheet' href='xxx.css',type='text/css'
<nav> 定义导航链接

表格标签
<table>  定义表格   cellpadding内容与边缘的距离，cellspacing单元格之间的空白 summary表格摘要 width宽度
<caption>  表格标题
<th>  表头单元格
<tr>   表格行
<td>   表格列   colspan跨越的列数，rowspan跨越的行数
<thead>  语义化表头内容
<tbody>  语义化的表格主体
<tfoot>   语义化的表格脚注
一个完整的表格
<table>
 <caption>我是一个标题<caption>
 <thead>
  <th>月份</th>
  <th>星期</th>
 </thead>
 <tbody>
  <tr>
    <td>一月</td>
    <td>星期一</td>
  </tr>
  <tr>
    <td>二月</td>
    <td>星期二</td>
  </tr>
 </tbody>
 <tfood>
 </tfood>
</table>

表单标签
<form>  属性有name名称，action规定向何处发送表单数据，method提交方式，autocomplete
<input> 属性有type，name名称，value值，placeholder默认输入的字段，required必填
<textarea>属性有col列，rows行，placeholder，required，name等
<button>属性有type(包含submit，reset，button)，name，value等
<select>下拉列表，内部放置option定义详细选项
<optgroup>为选定组规定描述，放于select内部，给option进行分组，属性有label，值就是分组的名称
<option>选项，放于select内部，要有value规定值
<label>有for属性，值要跟对应的input标签的id值相同
<fieldset>表单的外边框，放在form内部，里面有legend和表单详细内容，其中legend填写表单的名字
<datalist>用于多选项，给对应的input:text设置可选项，其id值要与input的list相同，内部放置option写每一个细分选项
<output>输出值，可用于计算，内部id，for的值是需要计算的相关id，在form标签定义oninput = 'x.value = parseInt(a.value)+parseInt(b.value)'

框架标签
<frameset>框架集    属性有cols:按列分，rows:按行分
<frame>框架的窗口或者框架   属性有name，src，
<noframes>不支持框架的替代内容
<iframe>内联框架 属性有name，src等

样式/节标签
<style>
<div>
<span>
<header>
<footer>
<section>
<article>
<aside>
<details>    定义细节，内部summary表示细节展示的标题，p表示细节详细内容
<summary>

有关音频视频的标签
<video> 视频   属性 src，width，height，autoplay，loop，controls
<audio> 声音内容
<source> 媒介元  属性 media资源类型  src   type mime类型
<track> 文本轨道 属性 src  default默认轨道  kind文本类型 label标签或者标题 srclang轨道的语言

有关元信息信息的标签
<head>  头部信息
<meta>  html文档的元信息   属性有http-equiv     name   content    name和content一起使用，相当于name和value
<base>   页面中所有连接的默认地址或者默认目标
<basefont>   不赞成使用，页面的文本默认字体颜色和尺寸






总结
行级元素（内联元素）：特点：内容决定元素所占位置（后面可以跟其他标签元素，不独占一行），不可以通过css改变宽高    包括：span    strong    em    a    del     它们都有一个默认的css属性  display：inline
块级元素：特点：独占一行（后面跟的其他标签元素会换到下一行显示），可以通过css改变宽高     包括：div    p    ul  li  ol  form  address   默认的css属性  display：block
行级块元素： 特点：内容决定大小（后面可以跟其他元素，不独占一行），可以通过css改编宽高    包括：img      默认的css属性  display：inline-block
注意：凡是带有inline 的标签都有文字特性（之间会留有缝隙）

text-align 属性规定了元素中文本的水平对齐方式居中对齐          <h1 style="text-align:center">This is a heading</h1>
<base> 标签为页面上的所有链接规定默认地址或默认目标（target）：<head>   <base href="http://www.w3school.com.cn/images/" />   <base target="_blank" />   </head>
css选择器 
标签选择器 <head> <style> h1{}  </style> </head> <body> <h1>woshisongtianyi</h1> </body>
类选择器 <head><style> .cities{}</style> </head> <body> <h1 class="cities"> London</h1></body>
id选择器 <head> <style> #cities{}</style> </head> <body> <h1 id="cities"> London</h1></body>
name选择器 <head> <style> [name = "xxx"] </style> </head> <body> <h1 name="xxx"> London</h1></body>
css常用属性：font-size 字体大小 font-family 字体格式 font-weight 字体加粗（值从100—900） text-shadow 文字阴影
text-shadow的用法：text-shadow：red 10px -10px 10px    依次是颜色，水平偏移  垂直偏移，模糊半径

块级元素：自成一行，可以设置width和height      例如：h1...
内联元素：所有自动排成一行，不可以设置width和height      例如：<a>
行内块级元素： 所有自动排成一行，可以设置width和height，且每个行内块级元素之间会自动空出一定的距离    例如：<button>


css的display属性：display：block→当前元素是块级元素
                             display：inline→当前元素是内联元素
                             display：inline-block→当前元素是行内块级元素



css伪类选择器
以<a>标签为例：<head> <style> a {color:black;} a:hover{color:red}</style> </head> <body><a href="#">慕课网</a></body>   效果为：鼠标放在链接上时，颜色变为红色，鼠标移开时，链接变为黑色


HTML5部分
一、新增的结构标签(有意义的div)
①<article>   标记定义一篇文章
②<header>   标记定义一个页面或者一个区域的头部
③<nav>       标记定义导航链接
④<section>     标记定义一个区域
⑤<aside>      标记定义页面内容部分的侧边栏
⑥<hgroup>    标记定义文件中一个区块的相关信息
⑦<figure>       标记定义一组媒体内容以及它们的标题
⑧<figcaption>    标记定义figure元素的标题
⑨<footer>      标记定义一个页面或者一个区域的底部
⑩<dialog>     标记定义一个对话框(会话框)，类似微信
header/section/footer > aside/article/figure/hgroup/nav > div/figcaption

二、新增的多媒体标签
①<video>  标记定义一个视屏 src/autoplay/loop/controls/width/height
autoplay自动播放，loop循环播放，controls控制栏
②<audio>  标记定义音频内容src/autoplay/loop/controls/width/height
autoplay自动播放，loop循环播放，controls控制栏
③<source>  标记定义媒体资源包含在video和audio内部 如果视频和音频有src则不用设置，没有则src=‘’，type="audio"/"video"
④<canvas>  标记定义图片
⑤<embed> 标记定义外部的可交互的内容或者插件，也有src、width、height

三、Web应用标签
①<meter>         状态标签(实时状态显示气压气温)C、O   包含属性：value、max、min、high、low
会通过当前value在max和min中的占比显示状态条的长度，根据在在high和low决定状态条的颜色
②<progress>     状态标签(任务过程安装加载)C、F、O    包含属性：value、max
会通过value在max中的占比显示长度，如果不设置value将会显示加载动画，要删除value才行
③<datalist>        为input标签定义一个下拉列表，配合option FO  在input标签下写，属性：id
id要与input中的list相同，在datalist内使用option来将每一个选项设置，option要设置value
要设置默认选择的选项，可以在option中设置属性selected
④<details>         标记定义一个元素的详细内容，配合summary  C  包含属性open
内部填写summary可以更改显示出来的标题，p来显示详细信息，open= ‘open’这样默认是打开的
⑤<label for=''>   与input type=checkbox连用，用于显示选择的内容，其for值要与input中的id相同
⑥<menu>           命令列表(目前所有主流浏览器都不支持)
⑦<menuitem>   menu命令列表(只有Firefox8.0+支持)
冰泉<command>    menu标记定义一个命令按钮(只有IE9支持)

四、其他标签
①<ruby>    标记定义注释或者音标    
②<rp>        告诉那些不支持ruby元素的浏览器如何去显示
③<rt>        标记定义对ruby的注视内容和文本
联合使用：夼
<p>我们来<ruby>夼<rp>(</rp><rt>kuang</rt><rp>)</rp></ruby>一个话题</p>
注意rp不要放在rt标签内
④<mark>    标记定义有标记的文本(黄色选中状态)
⑤<output>  标记定义一些输出类型，计算表单结果配合oninput事件
<form oninput='xxx.value=price.value*number.value'><input type='text' id='price' value='5000>
*<inout type='number' id='number' value='1'>=<output name='xxx' for='price numer'></output>
⑥<keygen>  标记定义表单里一个生成的键值(加密信息传输)
⑦<time>     标记定义一个日期/时间，目前都不支持

五、新增属性
1. input标签的type属性新增：
①type ='email'   在电脑端没有什么不同，但在手机端会更改输入时用户的键盘样式，以方便输入邮箱地址
②type = 'url'   在电脑端没有什么不同，但在ios端会更改输入时用户的键盘样式
③type = 'tel'    在电脑端没有什么不同，但在ios端会更改输入时用户的键盘样式,便于输入数字
④type = 'number'  输入框可以通过点击更改输入的数字大小，且限制输入的内容为数字、-、+、.、e
⑤type = 'range',要配合min = '',max=''使用，不输入则默认0-100，可以通过拖动滑竿来调整
⑥type = 'search'   输入字段后会出现一个×，点击将会清除输入的所有内容
⑦type = 'color'   允许用户选择颜色
⑧type = 'password'  输入的内容会变成*
⑨type = 'file'   允许用户选择文件，一旦有这个，form 的属性enctype的值就要修改为"multipart/form-data";
⑨type = 'date'   手机端便于用户选择具体的年月日，pc端类似
type = 'month'   手机端便于用户选择具体年和月
type = 'time'   手机端便于用户选择时间
type = 'datetime-local'  便于用户选择日期＋时间，并默认选择用户当前时区的时间
input type属性值：button、submit、password、file、image、radio、reset、text、checkbox

2.  form表单或者input新增属性
①autocomplete = 'on'/'off'   on属性时刷新具有自动补全的功能，
该属性默认是on的，而且input也可以有这个属性
②placeholder = ''   里面输入默认的显示内容，用于input标签，只有type=password，text，email，tel能用
③require = ‘require’， 输入提交的内容不能为空且要符合type的类型，用于input标签
④autofocus = 'autofocus'  默认光标聚焦，适用于input所有类型
⑤multiple = 'multiple'    允许用户选择多个，适用于type = file、email
⑥pattern = "^\d{5}[imooc]$"   填写正则表达式 用于表单验证

3. 链接属性
①<link rel = 'icon' href='icon.gif' type= 'image/gif' size='16*16'>
②<base href = 'xxx'  target='_blank'>  这样整个网页点击超链接打开时会先默认从xxx这个地方寻找相应的
页面，并且都会在一个新窗口打开
③<a media='tv/handheld'>如果是tv会对电视进行支持，handheld就会对手持设备进行支持
<a hreflang= 'zh'> 设置语言，这里设置语言是中文
<a rel = 'external'>  设置超链接的引用，这里超链接为外部链接

4.script属性
①<script defer src=''>加载完脚本后先不执行，等到整个页面加载完后再执行
②<script async src=''>加载完脚本后立刻执行，不用等整个页面加载完，属于异步执行

5. 列表属性
①<ol start='10'>该有序列表序号会从10开始
②<ol reversed = ‘reversed’>  该有序列表序号将会倒着排序


6.html、style属性
①<html manifest='xxx.manifest'> 定义离线网页展示，
②<style scoped>内嵌css，这种css就可以在任何位置写，不仅仅可以放在head中，还可以放在body中

7. div 的conteneditable 属性
① 该属性加上后div就可以作为富文本编辑器，在里面可以输入内容，设置div的min-height还可以让div
随着输入的内容自适应的增高
②富文本编辑器可以采用wangeditor  具体使用搜索即可


详细讲解HTML5 的音视频
一、标签：<video>(IE9以上才支持)

二、支持的格式：mp4，webm，ogv    需要注意的是Safari只支持mp4

三、属性：src  视频的播放地址      controls   控制器      width  宽度     height  高度      autoplay  自动播放
loop  循环播放    poster  视频封面     muted  静音

四、API事件
1. 可以用来监听从而触发其他事件的api：
ended            返回视频是否播放结束     video.ended    可以监听该事件   .addEventLinstener('ended',function(){})
timeupdate      当视频的播放状态更改时      可以监听，播放时会执行函数   addEventLsintener('timeupdate',function(){});
seeked            当用户已经移动到视频新位置后    可以监听，移动后会执行函数   addEventLsintener('seeked',function(){});
seeking           当用户正在移动到视频新位置时    可以监听，移动时会执行函数   addEventLsintener('seeking',function(){});
volumechange  当音量更改时       可以监听，移动时会执行函数   addEventLsintener('volumechange',function(){});
canplay          视频加载好可以播放   可以监听   .addEventlistener('canplay',function())

2. 获取返回值的api：
duration        返回视频的时间长度(以秒的形式)    video.duration
currentTime  设置或返回当前视频的播放长度    video.currentTime   可以用来设置快进
src                 设置或返回当前视频的来源         video.src
volume          设置或返回当前视频的音量(0~1)   video.volume
networkState 返回视频的网络状态    video.networkState   0未初始化   1已选取，但未使用网络   2正在下载   3未找到资源     
currentSrc      返回视频的URL     video.currentSrc  能播放的时候才有值，且不能赋值
ended            返回视频是否播放结束     video.ended    可以监听该事件   .addEventLinstener('ended',function(){})
loop              设置或返回视频是否循环播放      video.loop
playbackRate  设置或返回视频播放速度      video.playbackRate
readyState       返回视频的就绪状态     video.readyState    0没有信息   1有数据但不足以支撑    2当前数据可用但没有数据播放下一帧  3数据正在缓冲(当前和下一帧是可用的)  4可用数据足以开始播放

3. 进行具体操作或者设置的api：
play              播放   video.play()
pause            暂停   video.pause()
currentTime  设置或返回当前视频的播放长度    video.currentTime   可以用来设置快进
src                 设置或返回当前视频的来源         video.src
volume          设置或返回当前视频的音量(0~1)   video.volume
controls         设置视频是否显示控件               video.controls = true/false
muted           设置视频是否静音           video.muted = true
loop              设置或返回视频是否循环播放      video.loop
playbackRate  设置或返回视频播放速度      video.playbackRate
requestFullscreen  让视频变成全屏  需要在事件下且加前缀  mozRequestFullScreen()  webkitRequestFullscreen()

引入第三方框架的视频播放器：
首先引入video-js.css和video.min.js
然后html创建video标签，设置class为video-js, 并添加controls属性，显示控件
设置data-setup={}，会将控件变成作者写好的
class设置vjs-big-play-centered会将播放按钮放在视频正中间
内部创建source写上视频地址
script内部封装了若干个方法：
获取当前视频时长： .currenTime();
设置当前视频时长：.currentTime(100)
获取当前视频长度：.duration();
返回下载了多少：.buffered();
获取声音大小：.volume()
设置声音：   .volume(0.8)
获取视频的高度和宽度：.width()/.height()
也能监听.on('事件名称')事件







